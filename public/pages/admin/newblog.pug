<!DOCTYPE HTML>
html(lang="en")
    head
        meta(charset="UTF-8")
        meta(name="viewport", content="width=device-width, initial-scale=1.0")
        link(rel="stylesheet", href="../../style.css")
        link(rel="stylesheet", href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css")
        link(href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet")
        script(src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.18.0/axios.min.js" type="text/javascript")
        script(src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js")
        script(src="https://cdn.tiny.cloud/1/0f6u58q5m7wyoub8mz4189ertccw7me47x74wxy6pgr6064s/tinymce/5/tinymce.min.js", referrerpolicy="origin")
        script.
            document.addEventListener('DOMContentLoaded', function() { 
                var elems = document.querySelectorAll('.sidenav'); 
                var options = {isFixed: true}
                var instances = M.Sidenav.init(elems, options);
                });
                const blogs = document.getElementById("post")

                tinymce.init({
                            selector: "input",
                            plugins: 'advlist autolink lists link image charmap print preview hr anchor pagebreak',
                            toolbar_mode: 'floating',
                        });
                const tags = [];
                function addTag() {
                    let newTag = document.getElementById("tags").value;
                    let chip = document.createElement("div");
                    if (newTag !== "" && tags.includes(newTag) === false) {
                    chip.classList.add("chip");
                    chip.textContent = newTag;
                    tags.push(newTag);
                    let chipContainer = document.getElementById("tags-container")
                    chipContainer.appendChild(chip)
                    newTag.innerHTML = ""
                    } 
                }
                function formattedDate(d = new Date) {
                    let month = String(d.getMonth() + 1);
                    let day = String(d.getDate());
                    const year = String(d.getFullYear());
                    if (month.length < 2) month = '0' + month;
                    if (day.length < 2) day = '0' + day;
                    return `${month}/${day}/${year}`;
                    }
                

                function savePost() {
                    let post = tinymce.get("post").getContent();
                    let date = formattedDate()
                    let title = document.getElementById("title").value
                    let author = document.getElementById("author").value
                    let slug = document.getElementById("slug").value
                    let excerpt = document.getElementById("excerpt").value
                    axios.post("/api/posts/new-blog", {title: title, author: author, date: date, tags: tags, published: true, post: post, slug: slug, excerpt: excerpt})
                }
        
        title New Blog
    body
        ul#slide-out.sidenav
            li
                .user-view
                    .background.primary-color-background
                    a(href="#logo")
                        img.circle(src="../../images/SMART_Logo_IconOnly_WhiteOnBlue.png")
                    a(href="#name")
                        span.white-text.name= username
            li
                .dark-color-background Pages
                        each page in pages= pages
                            li
                                a(href = page["pageTitle"])= page["pageTitle"]
        a.sidenav-trigger(href="#", data-target="slide-out")
            i.material-icons menu
        .dark-color-background 
            h4 New Post
        .container
            .row
                .col.l8.offset-l4.s12
                form.col.s12
                    .row
                    .input-field.col.s12
                        h6 Title
                            textarea#title.materialize-textarea
                            label(for="title") Title
                    .input-field.col.s12
                        h6 Author
                            textarea#author.materialize-textarea= author           
            .row        
                input#post
            .row
                .input-field.col.s12
                        h6 Slug
                            textarea#slug.materialize-textarea
                            label(for="slug") Slug
            .row
                .input-field.col.s12
                    h6 Excerpt
                        textarea#excerpt.materialize-textarea
                        label(for="slug") Excerpt
            .row   
                h6 Tags
                textarea#tags
                button.btn(onclick="addTag()") Add Tag
                #tags-container
            .row
                button.btn(onclick="savePost()") Publish
                   
                    
                
                